{"ast":null,"code":"import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reduers/post'; // import axios from 'axios';\n\nimport shortId from 'shortid';\nimport { ADD_POST_TO_ME } from '../reduers/user'; // function addPostAPI(data) {\n//   return axios.post('/api/post', data);\n// }\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        data: action.data\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n} // function addCommentAPI(data) {\n//   return axios.post(`/api/post/${data.id}/comment`, data);\n// }\n\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    console.log(action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/sagas/post.js"],"names":["all","fork","put","takeLatest","delay","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","shortId","ADD_POST_TO_ME","addPost","action","id","generate","type","data","err","response","addComment","console","log","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,oBAAlD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,iBAPP,C,CAQA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,iBAA/B,C,CAEA;AACA;AACA;;AAEA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMW,EAAE,GAAGJ,OAAO,CAACK,QAAR,EAAX;AACA,UAAMd,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEP,gBADE;AAERQ,MAAAA,IAAI,EAAE;AACJH,QAAAA,EADI;AAEJG,QAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFT;AAFE,KAAD,CAAT;AAOA,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEL,cADA;AAENM,MAAAA;AAFM,KAAD,CAAT;AAID,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET,gBADE;AAERU,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF,C,CAED;AACA;AACA;;;AAEA,UAAUG,UAAV,CAAqBP,MAArB,EAA6B;AAC3B,MAAI;AACF;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACI,IAAnB;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AAEA,UAAMF,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,mBADE;AAERW,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFL,KAAD,CAAT;AAID,GATD,CASE,OAAOC,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEZ,mBADE;AAERa,MAAAA,IAAI,EAAEC,GAAG,CAACC,QAAJ,CAAaF;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUM,YAAV,GAAyB;AACvB,QAAMrB,UAAU,CAACM,gBAAD,EAAmBI,OAAnB,CAAhB;AACD;;AACD,UAAUY,eAAV,GAA4B;AAC1B,QAAMtB,UAAU,CAACG,mBAAD,EAAsBe,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACuB,YAAD,CAAL,EAAqBvB,IAAI,CAACwB,eAAD,CAAzB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport {\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n} from '../reduers/post';\r\n// import axios from 'axios';\r\nimport shortId from 'shortid';\r\nimport { ADD_POST_TO_ME } from '../reduers/user';\r\n\r\n// function addPostAPI(data) {\r\n//   return axios.post('/api/post', data);\r\n// }\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data);\r\n    yield delay(1000);\r\n    const id = shortId.generate();\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: {\r\n        id,\r\n        data: action.data,\r\n      },\r\n    });\r\n    yield put({\r\n        type: ADD_POST_TO_ME,\r\n        data\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// function addCommentAPI(data) {\r\n//   return axios.post(`/api/post/${data.id}/comment`, data);\r\n// }\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addCommentAPI, action.data);\r\n    console.log(action.data);\r\n    yield delay(1000);\r\n\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}