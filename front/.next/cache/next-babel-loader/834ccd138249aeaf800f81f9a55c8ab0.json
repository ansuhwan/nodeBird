{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst intialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n};\n\nconst login = data => {\n  return {\n    type: 'LOG_IN',\n    data\n  };\n}; // 비동기 액션 만들기\n// 액션 만들기\n\n\nconst changeNickname = data => {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data\n  };\n};\n\nchangeNickname(\"에베베\"); // (이전상태, 액션) => 다음상태\n\nconst rootRedicer = (state = intialState, action) => {\n  switch (action.type) {\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          is\n        })\n      });\n  }\n};\n\nexport default rootRedicer;","map":{"version":3,"sources":["D:/SuHwan/workspace/reactProject/nodeBird/front/reduers/index.js"],"names":["intialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","login","data","type","changeNickname","rootRedicer","state","action","is"],"mappings":";;;;;;AAAA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADU;AAOhBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AAPU,CAApB;;AAcA,MAAMC,KAAK,GAAIC,IAAD,IAAU;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAG,QADF;AAELD,IAAAA;AAFK,GAAP;AAID,CALD,C,CAMA;AAEA;;;AACA,MAAME,cAAc,GAAIF,IAAD,IAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,iBADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOAE,cAAc,CAAC,KAAD,CAAd,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGZ,WAAT,EAAsBa,MAAtB,KAAiC;AACjD,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,QAAL;AACI,6CACOG,KADP;AAEIX,QAAAA,IAAI,kCACCW,KAAK,CAACX,IADP;AAEFa,UAAAA;AAFE;AAFR;AAFR;AAUH,CAXD;;AAaA,eAAeH,WAAf","sourcesContent":["const intialState = {\r\n    user: {\r\n        isLoggedIn: false,\r\n        user: null,\r\n        signUpData: {},\r\n        loginData: {},\r\n    },\r\n    post: {\r\n        mainPosts: [],\r\n    },\r\n};\r\n\r\n\r\n\r\nconst login = (data) => {\r\n  return {\r\n    type : 'LOG_IN',\r\n    data,\r\n  }\r\n}\r\n// 비동기 액션 만들기\r\n\r\n// 액션 만들기\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type: \"CHANGE_NICKNAME\",\r\n        data,\r\n    };\r\n};\r\n\r\nchangeNickname(\"에베베\");\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootRedicer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOG_IN\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                  ...state.user,\r\n                  is\r\n                }\r\n            };\r\n    }\r\n};\r\n\r\nexport default rootRedicer;\r\n"]},"metadata":{},"sourceType":"module"}