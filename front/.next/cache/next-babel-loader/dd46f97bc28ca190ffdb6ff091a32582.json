{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SuHwan\\\\workspace\\\\reactProject\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // import { AutoSizer, List } from 'react-virtualized'\n\nimport AppLayout from '../compoments/AppLayout';\nimport PostCard from '../compoments/PostCard';\nimport PostForm from '../compoments/postForm';\nimport { LOAD_POSTS_REQUEST } from '../reduers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n\n  var _useState = useState(mockData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var scrollListener = function scrollListener(params) {\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\n      if (data.length <= 100) {\n        setData([].concat(_toConsumableArray(data), [{\n          id: uuidv4(),\n          content: '추가된 content입니다.'\n        }, {\n          id: uuidv4(),\n          content: '추가된 content입니다.'\n        }, {\n          id: uuidv4(),\n          content: '추가된 content입니다.'\n        }, {\n          id: uuidv4(),\n          content: '추가된 content입니다.'\n        }]));\n      }\n    }\n  };\n\n  var rowRanderer = function rowRanderer(_ref) {\n    var index = _ref.index,\n        style = _ref.style;\n    var post = data[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AutoSizer, {\n    AutoSizer: true,\n    children: function children(_ref2) {\n      var width = _ref2.width;\n      return /*#__PURE__*/_jsxDEV(List, {\n        rowCount: data.length // 항목의 개수\n        ,\n        height: 400 // 실제 렌더링 되는 높이범위\n        ,\n        rowHeight: 200 // 항목의높이\n        ,\n        width: width // 항목의 너비\n        ,\n        rowRenderer: rowRanderer // 항목렌더링할때쓰는 함수\n        ,\n        onScroll: scrollListener // scroll 함수\n        ,\n        overscanRowCount: 2 // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n}; //   useEffect(() => {\n//     function onScroll() {\n//       if (\n//         window.scrollY + document.documentElement.clientHeight\n//         > (document.documentElement.scrollHeight - 500)\n//       ) {\n//         if (hasMorePosts && !loadPostsLoading) {\n//           dispatch({\n//             type: LOAD_POSTS_REQUEST,\n//           });\n//         }\n//       }\n//     }\n//     window.addEventListener('scroll', onScroll);\n//     return () => {\n//       window.removeEventListener('scroll', onScroll);\n//     };\n//   }, [hasMorePosts, loadPostsLoading]);\n//   return (\n//     <AppLayout>\n//       {me && <PostForm />}\n//       {mainPosts.map((post) => (\n//         <PostCard key={post.id} post={post} />\n//       ))}\n//     </AppLayout>\n//   );\n// };\n\n\n_s(Home, \"HjvpQ1GbXRJQWGj6IpAD3IewJIo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","type","useState","mockData","data","setData","scrollListener","params","scrollTop","clientHeight","scrollHeight","length","id","uuidv4","content","rowRanderer","index","style","width"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,qBAAeC,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,sBAAsDT,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACG,IAAjB;AAAA,GAAD,CAAjE;AAAA,MAAQC,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,YAAnB,iBAAmBA,YAAnB;AAAA,MAAiCC,gBAAjC,iBAAiCA,gBAAjC;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,kBAAwBW,QAAQ,CAACC,QAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACjC,QAAIA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACE,YAA1B,IAA0CF,MAAM,CAACG,YAAP,GAAsB,GAApE,EAAyE;AACvE,UAAIN,IAAI,CAACO,MAAL,IAAe,GAAnB,EAAwB;AACtBN,QAAAA,OAAO,8BACFD,IADE,IAEL;AACEQ,UAAAA,EAAE,EAAEC,MAAM,EADZ;AAEEC,UAAAA,OAAO,EAAE;AAFX,SAFK,EAML;AACEF,UAAAA,EAAE,EAAEC,MAAM,EADZ;AAEEC,UAAAA,OAAO,EAAE;AAFX,SANK,EAUL;AACEF,UAAAA,EAAE,EAAEC,MAAM,EADZ;AAEEC,UAAAA,OAAO,EAAE;AAFX,SAVK,EAcL;AACEF,UAAAA,EAAE,EAAEC,MAAM,EADZ;AAEEC,UAAAA,OAAO,EAAE;AAFX,SAdK,GAAP;AAkBD;AACF;AACF,GAvBD;;AAyBA,MAAMC,WAAW,GAAG,SAAdA,WAAc,OAAsB;AAAA,QAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,QAAZC,KAAY,QAAZA,KAAY;AACxC,QAAMpB,IAAI,GAAGO,IAAI,CAACY,KAAD,CAAjB;AACA,wBACE;AAAK,MAAA,KAAK,EAAEC,KAAZ;AAAA,gBACGpB,IAAI,CAACiB;AADR;AAAA;AAAA;AAAA;AAAA,aADF;AAKD,GAPD;;AASA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAA,cACG;AAAA,UAAGI,KAAH,SAAGA,KAAH;AAAA,0BACC,QAAC,IAAD;AACE,QAAA,QAAQ,EAAEd,IAAI,CAACO,MADjB,CACyB;AADzB;AAEE,QAAA,MAAM,EAAE,GAFV,CAEe;AAFf;AAGE,QAAA,SAAS,EAAE,GAHb,CAGkB;AAHlB;AAIE,QAAA,KAAK,EAAEO,KAJT,CAIgB;AAJhB;AAKE,QAAA,WAAW,EAAEH,WALf,CAK4B;AAL5B;AAME,QAAA,QAAQ,EAAET,cANZ,CAM4B;AAN5B;AAOE,QAAA,gBAAgB,EAAE,CAPpB,CAOuB;;AAPvB;AAAA;AAAA;AAAA;AAAA,eADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CA5DD,C,CA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAzFMd,I;UACaN,W,EACFC,W,EACuCA,W;;;KAHlDK,I;AA2FN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { AutoSizer, List } from 'react-virtualized'\r\nimport AppLayout from '../compoments/AppLayout';\r\nimport PostCard from '../compoments/PostCard';\r\nimport PostForm from '../compoments/postForm';\r\nimport { LOAD_POSTS_REQUEST } from '../reduers/post';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  const [data, setData] = useState(mockData);\r\n  const scrollListener = (params) => {\r\n    if (params.scrollTop + params.clientHeight >= params.scrollHeight - 300) {\r\n      if (data.length <= 100) {\r\n        setData([\r\n          ...data,\r\n          {\r\n            id: uuidv4(),\r\n            content: '추가된 content입니다.',\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            content: '추가된 content입니다.',\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            content: '추가된 content입니다.',\r\n          },\r\n          {\r\n            id: uuidv4(),\r\n            content: '추가된 content입니다.',\r\n          }]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const rowRanderer = ({ index, style }) => {\r\n    const post = data[index];\r\n    return (\r\n      <div style={style}>\r\n        {post.content}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AutoSizer AutoSizer>\r\n      {({ width }) => (\r\n        <List\r\n          rowCount={data.length} // 항목의 개수\r\n          height={400} // 실제 렌더링 되는 높이범위\r\n          rowHeight={200} // 항목의높이\r\n          width={width} // 항목의 너비\r\n          rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\r\n          onScroll={scrollListener} // scroll 함수\r\n          overscanRowCount={2} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\r\n        />\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n};\r\n\r\n//   useEffect(() => {\r\n//     function onScroll() {\r\n//       if (\r\n//         window.scrollY + document.documentElement.clientHeight\r\n//         > (document.documentElement.scrollHeight - 500)\r\n//       ) {\r\n//         if (hasMorePosts && !loadPostsLoading) {\r\n//           dispatch({\r\n//             type: LOAD_POSTS_REQUEST,\r\n//           });\r\n//         }\r\n//       }\r\n//     }\r\n//     window.addEventListener('scroll', onScroll);\r\n//     return () => {\r\n//       window.removeEventListener('scroll', onScroll);\r\n//     };\r\n//   }, [hasMorePosts, loadPostsLoading]);\r\n\r\n//   return (\r\n//     <AppLayout>\r\n//       {me && <PostForm />}\r\n//       {mainPosts.map((post) => (\r\n//         <PostCard key={post.id} post={post} />\r\n//       ))}\r\n//     </AppLayout>\r\n//   );\r\n// };\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}