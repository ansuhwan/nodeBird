{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar intialState = {\n  name: \"안수환\",\n  age: 25,\n  password: \"zz\"\n}; // 액션 만들기\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n}; // (이전상태, 액션) => 다음상태\n\n\nvar rootRedicer = function rootRedicer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_NICKNAME\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootRedicer;","map":{"version":3,"sources":["D:/SuHwan/workspace/reactProject/nodeBird/front/reduers/index.js"],"names":["intialState","name","age","password","changeNickname","data","type","rootRedicer","state","action"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,KADU;AAEhBC,EAAAA,GAAG,EAAE,EAFW;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAApB,C,CAQA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,iBADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALD,C,CASA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBR,WAAwB;AAAA,MAAXS,MAAW;;AACjD,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,iBAAL;AACI,6CACOE,KADP;AAEIP,QAAAA,IAAI,EAAEQ,MAAM,CAACJ;AAFjB;AAFR;AAOH,CARD;;AAUA,eAAeE,WAAf","sourcesContent":["const intialState = {\r\n    name: \"안수환\",\r\n    age: 25,\r\n    password: \"zz\",\r\n};\r\n\r\n\r\n\r\n// 액션 만들기\r\nconst changeNickname = (data) => {\r\n    return {\r\n        type: \"CHANGE_NICKNAME\",\r\n        data,\r\n    };\r\n};\r\n\r\n\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootRedicer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_NICKNAME\":\r\n            return {\r\n                ...state,\r\n                name: action.data,\r\n            };\r\n    }\r\n};\r\n\r\nexport default rootRedicer;\r\n"]},"metadata":{},"sourceType":"module"}