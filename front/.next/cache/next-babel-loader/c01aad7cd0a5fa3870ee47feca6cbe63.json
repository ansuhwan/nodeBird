{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from 's';\nimport reducer from \"../reduers\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var middlewares = [loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,GAAjC;AAEA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,IAAMC,gBAAgB,GAClB,SADEA,gBACF;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SACA,UAACC,IAAD;AAAA,WACA,UAACC,MAAD,EAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KALD;AAAA,GADA;AAAA,CADJ;;AASA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,WAAW,GAAG,CAACR,gBAAD,CAApB;AACA,MAAMS,QAAQ,GACV,QACMb,OAAO,CAACF,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CADb,GAEMX,mBAAmB,CAACH,eAAe,MAAf,SAAmBc,WAAnB,CAAD,CAH7B;AAKA,MAAME,KAAK,GAAGf,WAAW,CAACI,OAAD,EAAUU,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACH,CAVD;;AAYA,IAAMC,OAAO,GAAGlB,aAAa,CAACc,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from 's'\r\n\r\nimport reducer from \"../reduers\";\r\n\r\nconst loggerMiddleware =\r\n    ({ dispatch, getState }) =>\r\n    (next) =>\r\n    (action) => {\r\n        console.log(action);\r\n\r\n        return next(action);\r\n    };\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [loggerMiddleware];\r\n    const enhancer =\r\n        process.env.NODE_ENV === \"production\"\r\n            ? compose(applyMiddleware(...middlewares))\r\n            : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    const store = createStore(reducer, enhancer);\r\n\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}