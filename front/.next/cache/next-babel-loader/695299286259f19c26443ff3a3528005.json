{"ast":null,"code":"import shortId from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var intialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost() {\n  return Array(10).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        id: shortId.generate(),\n        User: {\n          id: shortId.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence\n      }]\n    };\n  });\n}; // intialState.mainPosts = intialState.mainPosts.concat(generateDummyPost());\n\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '안수횐'\n    }\n  };\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '안수환'\n    },\n    Images: [],\n    Comments: []\n  };\n}; //  이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n// state를 조작하면 안된다 draft만 조작\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePost = draft.mainPosts.lenget < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = true;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        {\n          draft.removePostLoading = false;\n          draft.removePostDone = true;\n          draft.mainPosts = draft.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          });\n          break;\n        }\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex(\n          //   (v) => v.id === action.data.postId,\n          // );\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/reduers/post.js"],"names":["shortId","produce","faker","intialState","mainPosts","imagePaths","hasMorePost","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyComment","dummyPost","reducer","state","action","draft","concat","lenget","error","unshift","filter","v","post","find","postId"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const intialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const generateDummyPost = () => Array(10).fill().map(() => ({\r\n  id: shortId.generate(),\r\n  User: {\r\n    id: shortId.generate(),\r\n    nickname: faker.name.findName(),\r\n  },\r\n  content: faker.lorem.paragraph(),\r\n  Images: [{\r\n    src: faker.image.image(),\r\n  }],\r\n  Comments: [{\r\n    id: shortId.generate(),\r\n    User: {\r\n      id: shortId.generate(),\r\n      nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.sentence,\r\n  }],\r\n}));\r\n\r\n// intialState.mainPosts = intialState.mainPosts.concat(generateDummyPost());\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '안수횐',\r\n  },\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '안수환',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n//  이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\n// state를 조작하면 안된다 draft만 조작\r\nconst reducer = (state = intialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOAD_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = action.data.concat(draft.mainPosts);\r\n      draft.hasMorePost = draft.mainPosts.lenget < 50;\r\n      break;\r\n    case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(dummyPost(action.data));\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS: {\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n      break;\r\n    }\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n      post.Comments.unshift(dummyComment(action.data.content));\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      break;\r\n      // const postIndex = state.mainPosts.findIndex(\r\n      //   (v) => v.id === action.data.postId,\r\n      // );\r\n      // const post = { ...state.mainPosts[postIndex] };\r\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      // const mainPosts = [...state.mainPosts];\r\n      // mainPosts[postIndex] = post;\r\n      // return {\r\n      //   ...state,\r\n      //   mainPosts,\r\n      //   addCommentLoading: false,\r\n      //   addCommentDone: true,\r\n      // };\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}