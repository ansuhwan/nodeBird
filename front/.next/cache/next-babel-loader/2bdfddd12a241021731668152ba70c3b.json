{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar intialState = {\n  name: '안수환',\n  age: 25,\n  password: 'zz'\n};\n\nvar rootRedicer = function rootRedicer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootRedicer;","map":{"version":3,"sources":["D:/SuHwan/workspace/reactProject/nodeBird/front/reduers/index.js"],"names":["intialState","name","age","password","rootRedicer","state","action","type","data"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAE;AACjBC,EAAAA,IAAI,EAAG,KADU;AAEjBC,EAAAA,GAAG,EAAG,EAFW;AAGjBC,EAAAA,QAAQ,EAAG;AAHM,CAAnB;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBL,WAAwB;AAAA,MAAXM,MAAW;;AACnD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,iBAAL;AACE,6CACGF,KADH;AAEAJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFb;AAFJ;AAOD,CARD;;AAUA,eAAeJ,WAAf","sourcesContent":["const intialState ={\r\n  name : '안수환',\r\n  age : 25,\r\n  password : 'zz'\r\n}\r\n\r\n\r\n\r\n\r\nconst rootRedicer = (state = intialState ,action) => {\r\n  switch(action.type){\r\n    case 'CHANGE_NICKNAME':\r\n      return {\r\n      ...state,\r\n      name: action.data\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootRedicer;\r\n"]},"metadata":{},"sourceType":"module"}