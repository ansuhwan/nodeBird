{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SuHwan\\\\workspace\\\\reactProject\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AutoSizer, List } from 'react-virtualized';\nimport AppLayout from '../compoments/AppLayout';\nimport PostCard from '../compoments/PostCard';\nimport PostForm from '../compoments/postForm';\nimport { LOAD_POSTS_REQUEST } from '../reduers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n\n  const rowRanderer = ({\n    index,\n    style\n  }) => {\n    const post = mainPosts[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AutoSizer, {\n    children: /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: ({\n        width\n      }) => /*#__PURE__*/_jsxDEV(List, {\n        rowCount: data.length // 항목의 개수\n        ,\n        height: 400 // 실제 렌더링 되는 높이범위\n        ,\n        rowHeight: 200 // 항목의높이\n        ,\n        width: width // 항목의 너비\n        ,\n        rowRenderer: rowRanderer // 항목렌더링할때쓰는 함수\n        ,\n        onScroll: scrollListener // scroll 함수\n        ,\n        overscanRowCount: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AutoSizer","List","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","rowRanderer","index","style","id","width","data","length","scrollListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAST,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAjE;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,aAASmB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACGF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF7C,EAGE;AACA,YAAIV,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrCN,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEV;AADC,WAAD,CAAR;AAGD;AACF;AACF;;AACDY,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAACJ,YAAD,EAAeC,gBAAf,CAjBM,CAAT;;AAmBA,QAAMY,WAAW,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAsB;AACxC,UAAMb,IAAI,GAAGH,SAAS,CAACe,KAAD,CAAtB;AACA,wBACE;AAAK,MAAA,KAAK,EAAEC,KAAZ;AAAA,6BACE,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEb;AAA9B,SAAeA,IAAI,CAACc,EAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAPD;;AASA,sBACE,QAAC,SAAD;AAAA,2BAEE,QAAC,SAAD;AAAA,gBACG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AACE,QAAA,QAAQ,EAAEC,IAAI,CAACC,MADjB,CACyB;AADzB;AAEE,QAAA,MAAM,EAAE,GAFV,CAEe;AAFf;AAGE,QAAA,SAAS,EAAE,GAHb,CAGkB;AAHlB;AAIE,QAAA,KAAK,EAAEF,KAJT,CAIgB;AAJhB;AAKE,QAAA,WAAW,EAAEJ,WALf,CAK4B;AAL5B;AAME,QAAA,QAAQ,EAAEO,cANZ,CAM4B;AAN5B;AAOE,QAAA,gBAAgB,EAAE;AAPpB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxDD;;AA0DA,eAAe1B,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AutoSizer, List } from 'react-virtualized';\r\nimport AppLayout from '../compoments/AppLayout';\r\nimport PostCard from '../compoments/PostCard';\r\nimport PostForm from '../compoments/postForm';\r\nimport { LOAD_POSTS_REQUEST } from '../reduers/post';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight\r\n        > (document.documentElement.scrollHeight - 500)\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading]);\r\n\r\n  const rowRanderer = ({ index, style }) => {\r\n    const post = mainPosts[index];\r\n    return (\r\n      <div style={style}>\r\n        <PostCard key={post.id} post={post} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AutoSizer>\r\n\r\n      <AppLayout>\r\n        {({ width }) => (\r\n          <List\r\n            rowCount={data.length} // 항목의 개수\r\n            height={400} // 실제 렌더링 되는 높이범위\r\n            rowHeight={200} // 항목의높이\r\n            width={width} // 항목의 너비\r\n            rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\r\n            onScroll={scrollListener} // scroll 함수\r\n            overscanRowCount={2}\r\n          />\r\n        )}\r\n      </AppLayout>\r\n    </AutoSizer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}