{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SuHwan\\\\workspace\\\\reactProject\\\\front\\\\compoments\\\\PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reduers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var dispatch = useDispatch();\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this)],\n      extra: FollowButton,\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postDate: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 11111\\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 27\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"Qyn7Pedm3HudkTBYedBcJgyJYFA=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    // eslint-disable-next-line react/forbid-prop-types\n    User: PropTypes.object,\n    content: PropTypes.string,\n    // eslint-disable-next-line react/forbid-prop-types\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/compoments/PostCard.js"],"names":["React","useCallback","useState","Card","Popover","Button","Avatar","List","Comment","RetweetOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","liked","setLiked","state","removePostLoading","dispatch","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","onRemovePost","type","data","id","user","me","marginBottom","Images","User","FollowButton","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  HeartTwoTone,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reduers/post';\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n  const { removePostLoading } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  const onRemovePost = useCallback(() => {\r\n    dispatch({\r\n      type: REMOVE_POST_REQUEST,\r\n      data: post.id,\r\n    });\r\n  }, []);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  return (\r\n    <div style={{ marginBottom: 10 }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              key=\"heart\"\r\n              twoToneColor=\"#eb2f96\"\r\n              onClick={onToggleLike}\r\n            />\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike} />\r\n          ),\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      loading={removePostLoading}\r\n                      onClick={onRemovePost}\r\n                    >\r\n                      삭제\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        extra={FollowButton}\r\n      >\r\n        {/* <Image /> */}\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={<PostCardContent postDate={post.content} />}\r\n        />\r\n        {/* <Buttons></Buttons> */}\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 11111댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n      {/* <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}