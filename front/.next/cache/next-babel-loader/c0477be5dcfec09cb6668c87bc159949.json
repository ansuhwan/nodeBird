{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\SuHwan\\\\workspace\\\\reactProject\\\\front\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AutoSizer, List } from 'react-virtualized';\nimport AppLayout from '../compoments/AppLayout';\nimport PostCard from '../compoments/PostCard';\nimport PostForm from '../compoments/postForm';\nimport { LOAD_POSTS_REQUEST } from '../reduers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Home = function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n\n  var rowRanderer = function rowRanderer(_ref) {\n    var index = _ref.index,\n        style = _ref.style;\n    var post = mainPosts[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AutoSizer, {\n    children: /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: function children(_ref2) {\n        var width = _ref2.width;\n        return /*#__PURE__*/_jsxDEV(List, {\n          rowCount: data.length // 항목의 개수\n          ,\n          height: 400 // 실제 렌더링 되는 높이범위\n          ,\n          rowHeight: 200 // 항목의높이\n          ,\n          width: width // 항목의 너비\n          ,\n          rowRenderer: rowRanderer // 항목렌더링할때쓰는 함수\n          ,\n          onScroll: scrollListener // scroll 함수\n          ,\n          overscanRowCount: 2 // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"oqG10cifXvQtI8RQRta7gdIVAso=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AutoSizer","List","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","rowRanderer","index","style","id","width","data","length","scrollListener"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AutoSizer, List } from 'react-virtualized';\r\nimport AppLayout from '../compoments/AppLayout';\r\nimport PostCard from '../compoments/PostCard';\r\nimport PostForm from '../compoments/postForm';\r\nimport { LOAD_POSTS_REQUEST } from '../reduers/post';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (\r\n        window.scrollY + document.documentElement.clientHeight\r\n        > (document.documentElement.scrollHeight - 500)\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading]);\r\n\r\n  const rowRanderer = ({ index, style }) => {\r\n    const post = mainPosts[index];\r\n    return (\r\n      <div style={style}>\r\n        <PostCard key={post.id} post={post} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <AutoSizer>\r\n\r\n      <AppLayout>\r\n      {({width}) => (\r\n        <List\r\n          rowCount={data.length} // 항목의 개수\r\n          height={400} // 실제 렌더링 되는 높이범위\r\n          rowHeight={200} // 항목의높이\r\n          width={width} // 항목의 너비\r\n          rowRenderer={rowRanderer} // 항목렌더링할때쓰는 함수\r\n          onScroll={scrollListener} // scroll 함수\r\n          overscanRowCount={2} // 다음에 로드해올 항목 미리 컨텐츠 높이 잡기\r\n        />\r\n      )}\r\n      </AppLayout>\r\n    </AutoSizer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}