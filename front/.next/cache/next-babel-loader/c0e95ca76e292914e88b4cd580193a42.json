{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reduers\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,gBAAgB,GAClB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KACCC,IAAD,IACCC,MAAD,IAAY;AACRC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAPL;;AASA,MAAMG,cAAc,GAAG,MAAM;AACzB,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;AACA,QAAMU,QAAQ,GACV,QACMd,OAAO,CAACF,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADb,GAEMZ,mBAAmB,CAACH,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAH7B;AAKA,QAAME,KAAK,GAAGhB,WAAW,CAACI,OAAD,EAAUW,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACH,CAXD;;AAaA,MAAMC,OAAO,GAAGnB,aAAa,CAACc,cAAD,EAAiB;AAC1CM,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"../reduers\";\r\n\r\nconst loggerMiddleware =\r\n    ({ dispatch, getState }) =>\r\n    (next) =>\r\n    (action) => {\r\n        console.log(action);\r\n\r\n        return next(action);\r\n    };\r\n\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n    const enhancer =\r\n        process.env.NODE_ENV === \"production\"\r\n            ? compose(applyMiddleware(...middlewares))\r\n            : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    const store = createStore(reducer, enhancer);\r\n    \r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}