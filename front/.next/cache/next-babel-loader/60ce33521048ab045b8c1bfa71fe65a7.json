{"ast":null,"code":"import { all, fork, call, takeEvery, put, takeLatest, delay } from \"redux-saga/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/addpost\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST\", addPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/sagas/post.js"],"names":["all","fork","call","takeEvery","put","takeLatest","delay","addPostAPI","data","axios","post","addPost","action","result","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SACIA,GADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIIC,SAJJ,EAKIC,GALJ,EAMIC,UANJ,EAOIC,KAPJ,QAQO,oBARP;;AASA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,cAAX,EAA2BF,IAA3B,CAAP;AACH;;AAED,UAAUG,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMX,IAAI,CAACK,UAAD,EAAaK,MAAM,CAACJ,IAApB,CAAzB;AAEA,UAAMJ,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,kBADA;AAENN,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOO,GAAP,EAAY;AACV,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,kBADA;AAENN,MAAAA,IAAI,EAAEO,GAAG,CAACC,QAAJ,CAAaR;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,YAAV,GAAyB;AACrB,QAAMZ,UAAU,CAAC,UAAD,EAAaM,OAAb,CAAhB;AACH;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACgB,YAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {\r\n    all,\r\n    fork,\r\n    call,\r\n    takeEvery,\r\n    put,\r\n    takeLatest,\r\n    delay,\r\n} from \"redux-saga/effects\";\r\nfunction addPostAPI(data) {\r\n    return axios.post(\"/api/addpost\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n\r\n        yield put({\r\n            type: \"ADD_POST_SUCCESS\",\r\n            data: result.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: \"ADD_POST_FAILURE\",\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(\"ADD_POST\", addPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([fork(watchAddPost)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}