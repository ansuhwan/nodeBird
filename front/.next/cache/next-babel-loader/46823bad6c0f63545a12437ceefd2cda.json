{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reduers\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action;\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/User/Desktop/SuHwan/workspace/reactProject/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","reducer","loggerMiddleware","dispatch","getState","next","action","configureStore","middlewares","thunkMiddleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAA0BC,IAAD,IAAUC,MAA5D;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,CAACC,eAAD,CAApB;AACA,QAAMC,QAAQ,GACV,QACMX,OAAO,CAACF,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CADb,GAEMR,mBAAmB,CAACH,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CAH7B;AAKA,QAAMG,KAAK,GAAGb,WAAW,CAACG,OAAD,EAAUS,QAAV,CAAzB;AAEA,SAAOC,KAAP;AACH,CAVD;;AAYA,MAAMC,OAAO,GAAGhB,aAAa,CAACW,cAAD,EAAiB;AAC1CM,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, createStore, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducer from \"../reduers\";\r\n\r\nconst loggerMiddleware = ({dispatch,getState}) => (next) => action\r\n\r\nconst configureStore = () => {\r\n    const middlewares = [thunkMiddleware];\r\n    const enhancer =\r\n        process.env.NODE_ENV === \"production\"\r\n            ? compose(applyMiddleware(...middlewares))\r\n            : composeWithDevTools(applyMiddleware(...middlewares));\r\n\r\n    const store = createStore(reducer, enhancer);\r\n\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"]},"metadata":{},"sourceType":"module"}